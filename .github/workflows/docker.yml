name: docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-docker-images:
    name: Build docker images
    runs-on: ubuntu-20.04
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        fail-fast: false
        CUDA: [11.0.3, 11.2.2, 11.4.0]
        LINUX: [ubuntu18.04, ubuntu20.04]
    env:
      ARCH: amd64
      NODE: 16.5.0
      RAPIDS: 21.08.00
      REPOSITORY: localhost:5000/rapidsai/node
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: builder
        with:
          buildkitd-flags: --debug
          driver-opts: network=host
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet $CONDA
      - name: Print disk usage and image cache
        if: always()
        run: |
          df -h
          docker images
      - name: Build devel base
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/devel/01-base.Dockerfile
          build-args: |
            "UID=1000"
            "NODE_VERSION=${{ env.NODE }}"
            "FROM_IMAGE=nvidia/cudagl:${{ matrix.CUDA }}-devel-${{ matrix.LINUX }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}
      - name: Build devel main
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/devel/02-main.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }}
      - name: Build devel build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/03-build.Dockerfile
          build-args: |
            "DISPLAY=:0.0"
            "PARALLEL_LEVEL=1"
            "SCCACHE_CACHE_SIZE=100G"
            "SCCACHE_IDLE_TIMEOUT=32768"
            "SCCACHE_REGION=us-west-2"
            "SCCACHE_BUCKET=node-rapids-sccache"
            "RAPIDS_VERSION=${{ env.RAPIDS }}"
            "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
            "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}
      - name: Build runtime cuda-base
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/01-base.Dockerfile
          build-args: |
            "UID=1000"
            "FROM_IMAGE=nvidia/cuda:${{ matrix.CUDA }}-runtime-${{ matrix.LINUX }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}
      - name: Build runtime cudagl-base
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/01-base.Dockerfile
          build-args: |
            "UID=1000"
            "FROM_IMAGE=nvidia/cudagl:${{ matrix.CUDA }}-runtime-${{ matrix.LINUX }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}
      - name: Build runtime main
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/main.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }}
      - name: Build runtime demo
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/demo.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-demo-${{ env.ARCH }}
      - name: Build runtime glfw
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/glfw.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-glfw-${{ env.ARCH }}
      - name: Build runtime cudf
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/cudf.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-cudf-${{ env.ARCH }}
      - name: Build runtime blazingsql
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/blazingsql.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-blazingsql-${{ env.ARCH }}
      - name: Build runtime cuml
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/cuml.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-cuml-${{ env.ARCH }}
      - name: Build runtime cugraph
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/cugraph.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-cugraph-${{ env.ARCH }}
      - name: Build runtime cuspatial
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          builder: ${{ steps.builder.outputs.name }}
          file: dockerfiles/runtime/cuspatial.Dockerfile
          build-args: |
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-base-${{ env.ARCH }}"
            "DEVEL_IMAGE=${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-build-${{ env.ARCH }}"
          tags: ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-runtime-node-${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-cuspatial-${{ env.ARCH }}
