name: Build and push image

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      CUMLPRIMS_SSH_PRIVATE_DEPLOY_KEY:
        required: true
      CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY:
        required: true
    inputs:
      tag:
        type: string
        required: true
      file:
        type: string
        required: true
      temp:
        type: string
        required: true
      build-args:
        type: string
        required: true
      manual_build:
        type: string
        required: true

jobs:
  build-and-publish-image-ssh:
    runs-on: [self-hosted, linux, amd64, cpu4]
    strategy:
      fail-fast: true
      matrix:
        CUDA: ["11.6.2"]
        LINUX: ["ubuntu20.04"]
    steps:
      - name: Dump runner context
        shell: bash
        run: |
          echo "${{ toJSON(runner) }}"
          echo "is_gha_runner=${{ !contains(runner.name, 'runners-') }}" >> $GITHUB_ENV;
          echo "manual_build=${{ github.event_name == 'workflow_dispatch' }}" >> $GITHUB_ENV;
          echo "CUDA_VERSION_MAJOR=$(echo "${{ matrix.CUDA }}" | cut -d'.' -f1)" >> $GITHUB_ENV
          echo "CUDA_VERSION_MINOR=$(echo "${{ matrix.CUDA }}" | cut -d'.' -f2)" >> $GITHUB_ENV
          echo "CUDA_VERSION_PATCH=$(echo "${{ matrix.CUDA }}" | cut -d'.' -f3)" >> $GITHUB_ENV

      - name: Set up self-hosted runner
        if: env.is_gha_runner != 'true'
        shell: bash
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends jq git-lfs
          sudo sed -ri "s@$HOME@${{ runner.workspace }}@g" /etc/passwd
          sudo chown -R $(id -u):$(id -g) "${{ runner.workspace }}"
          echo "HOME=${{ runner.workspace }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Checkout LFS
        shell: bash
        run: git lfs checkout

      - name: Free up disk space
        if: env.is_gha_runner == 'true'
        uses: ./.github/actions/free-disk-space
        with:
          tool_cache: ${{ runner.tool_cache }}

      - name: Get last successful main commit sha
        id: last_main_commit
        if: env.manual_build != 'true'
        uses: nrwl/last-successful-commit-action@v1
        with:
          branch: main
          workflow_id: "merge.pr.yml"
          github_token: "${{ github.token }}"

      - name: Check if files changed
        id: files_changed
        if: env.manual_build != 'true'
        uses: tj-actions/changed-files@v23.1
        with:
          base_sha: ${{ steps.last_main_commit.outputs.commit_hash }}
          files: |
            \.npmrc
            modules
            yarn\.lock
            package\.json
            dev/dockerfiles/devel/(main|package)\.Dockerfile
            \.github/workflows/merge\.pr\.yml
            \.github/actions/build-and-publish-image/action\.yml

      - name: Set environment variables
        shell: bash
        run: |
          echo "PARALLEL_LEVEL=${PARALLEL_LEVEL:-4}" >> $GITHUB_ENV;
          echo "VERSION=$(cat lerna.json | jq -r '.version')" >> $GITHUB_ENV;
          echo "RAPIDS_VERSION=$(cat package.json | jq -r '.config.rapids_version')" >> $GITHUB_ENV;
          echo "files_changed=${{ steps.files_changed.outputs.any_changed == 'true' || steps.files_changed.outputs.any_deleted == 'true' }}" >> $GITHUB_ENV;

      - name: Build and push image
        if: env.manual_build == 'true' || env.files_changed == 'true'
        uses: ./.github/actions/build-and-publish-image-ssh
        with:
          pull: true
          push: true
          home: ${{ env.HOME }}
          temp: ${{ runner.temp }}
          file: dev/dockerfiles/devel/package.Dockerfile
          registry-url: ghcr.io
          registry-username: ${{ github.repository_owner }}
          registry-password: ${{ github.token }}
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          CUMLPRIMS_SSH_PRIVATE_DEPLOY_KEY: "${{ secrets.CUMLPRIMS_SSH_PRIVATE_DEPLOY_KEY }}"
          CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY: "${{ secrets.CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY }}"
          tags: |
            ${{ env.REPOSITORY }}:${{ env.VERSION }}-devel-node${{ env.NODE }}-cuda${{ env.CUDA_VERSION_MAJOR }}-${{ matrix.LINUX }}-packages
          build-args: |
            "CUDAARCHS=ALL"
            "PARALLEL_LEVEL=${{ env.PARALLEL_LEVEL }}"
            "SCCACHE_IDLE_TIMEOUT=32768"
            "SCCACHE_REGION=us-west-2"
            "SCCACHE_BUCKET=node-rapids-sccache"
            "RAPIDS_VERSION=${{ env.RAPIDS_VERSION }}"
            "FROM_IMAGE=${{ env.REPOSITORY }}:${{ env.VERSION }}-devel-node${{ env.NODE }}-cuda${{ env.CUDA_VERSION_MAJOR }}-${{ matrix.LINUX }}-main"
