name: Build pull request

on:
  pull_request:
    branches:
      - main

jobs:
  build-pull-request:
    name: Build pull request
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        CUDA: [11.0.3, 11.2.2, 11.4.0]
        LINUX: [ubuntu18.04, ubuntu20.04]
    env:
      ARCH: amd64
      NODE: 16.5.0
      RAPIDS: 21.08.00
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Free up disk space
        if: always()
        run: |
          df -h
          docker images
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          sudo rm -rf /opt/ghc
          sudo rm -rf /home/linuxbrew/.linuxbrew
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$CONDA"
          docker rmi $(docker image ls -aq) || true
          df -h
          docker images
      - name: Cache C++ dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-${{ env.ARCH }}-cache-${{ hashFiles('**/modules/**/CMakeLists.txt', '**/modules/**/*.cmake') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-${{ env.ARCH }}-cache-
          path: |
            modules/.cache
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-${{ env.ARCH }}-node_modules-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-${{ env.ARCH }}-node_modules-
          path: |
            node_modules
      - name: Check if devel dockerfiles changed
        id: devel_dockerfiles_changed
        uses: tj-actions/changed-files@v9.1
        with:
          files: |
            dockerfiles/devel/01-base.Dockerfile
            dockerfiles/devel/02-main.Dockerfile
      - name: Build devel images and packages
        run: |
          echo "$(id -u):$(id -g)"
          if [[ "${{ steps.devel_dockerfiles_changed.outputs.any_changed }}" == "true" ]]; then
            echo "UID=$(id -u)" >> .env
            echo "ARCH=${{ env.ARCH }}" >> .env
            echo "NODE_VERSION=${{ env.NODE }}" >> .env
            echo "CUDA_VERSION=${{ matrix.CUDA }}" >> .env
            echo "RAPIDS_VERSION=${{ env.RAPIDS }}" >> .env
            echo "LINUX_VERSION=${{ matrix.LINUX }}" >> .env
            yarn docker:build:devel
            docker image tag \
              rapidsai/node:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }} \
              ghcr.io/rapidsai/node:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }}
          fi
          echo "DISPLAY=:0.0" >> .env
          echo "CUDAARCHS=ALL" >> .env
          echo "PARALLEL_LEVEL=1" >> .env
          echo "SCCACHE_CACHE_SIZE=100G" >> .env
          echo "SCCACHE_IDLE_TIMEOUT=32768" >> .env
          echo "SCCACHE_REGION=us-west-2" >> .env
          echo "SCCACHE_BUCKET=node-rapids-sccache" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          mkdir -p /tmp/.yarn /tmp/.cache
          docker run --rm --env-file .env -u "$(id -u):$(id -g)" -v "$(pwd):/opt/rapids/node:rw" -v "/tmp/.yarn:/.yarn:rw" -v "/tmp/.cache:/.cache:rw" \
            ghcr.io/rapidsai/node:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cudagl${{ matrix.CUDA }}-${{ matrix.LINUX }}-main-${{ env.ARCH }} \
            bash -c 'set -ex; echo $PATH && echo $CUDA_HOME && which -a nvcc && nvcc --version && yarn && yarn rebuild'
