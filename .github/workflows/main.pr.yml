name: Build pull request

on:
  pull_request:
    branches:
      - main

jobs:
  build-pull-request:
    name: Build pull request
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        CUDA: [11.5.0]
        LINUX: [ubuntu18.04, ubuntu20.04]
    env:
      NODE: 16.13.0
      RAPIDS: 22.02.00
      REPOSITORY: ghcr.io/rapidsai/node
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS
        run: git lfs checkout
      - name: Free up disk space
        run: |
          df -h
          docker images
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          sudo rm -rf /opt/ghc "$CONDA" \
            /usr/share/swift \
            /usr/share/dotnet \
            /usr/local/lib/android \
            /home/linuxbrew/.linuxbrew \
            /opt/hostedtoolcache/CodeQL
          docker rmi $(docker image ls -aq) || true
          df -h
          docker images
      - name: Cache C++ dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-cache-${{ hashFiles('**/modules/**/CMakeLists.txt', '**/modules/**/*.cmake') }}
          path: |
            .cache
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ env.RAPIDS }}-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-node_modules-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          path: |
            node_modules
      - name: Check if devel dockerfiles changed
        id: devel_dockerfiles_changed
        uses: tj-actions/changed-files@v9.1
        with:
          files: |
            dev/dockerfiles/devel/main.Dockerfile
      - name: Build devel images and packages
        run: |
          echo "CUDAARCHS=ALL" >> .env
          echo "PARALLEL_LEVEL=1" >> .env
          echo "REPOSITORY=${{ env.REPOSITORY }}" >> .env
          echo "NODE_VERSION=${{ env.NODE }}" >> .env
          echo "CUDA_VERSION=${{ matrix.CUDA }}" >> .env
          echo "RAPIDS_VERSION=${{ env.RAPIDS }}" >> .env
          echo "LINUX_VERSION=${{ matrix.LINUX }}" >> .env
          echo "SCCACHE_IDLE_TIMEOUT=32768" >> .env
          echo "SCCACHE_REGION=us-west-2" >> .env
          echo "SCCACHE_BUCKET=node-rapids-sccache" >> .env
          if [[ "${{ steps.devel_dockerfiles_changed.outputs.any_changed }}" == "true" ]]; then
            AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              yarn docker:build:devel:main
          fi
          mkdir -p /tmp/.{yarn,cache}
          docker run --rm \
            --env-file .env \
            -u "$(id -u):$(id -g)" \
            -v "/tmp/.yarn:/.yarn:rw" \
            -v "/tmp/.cache:/.cache:rw" \
            -v "$(pwd):/opt/rapids/node:rw" \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            ${{ env.REPOSITORY }}:${{ env.RAPIDS }}-devel-node${{ env.NODE }}-cuda${{ matrix.CUDA }}-${{ matrix.LINUX }}-main \
            bash -c 'set -ex; echo $PATH && echo $CUDA_HOME && which -a nvcc && nvcc --version && yarn && yarn rebuild'
